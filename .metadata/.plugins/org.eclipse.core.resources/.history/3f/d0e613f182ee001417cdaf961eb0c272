/*
 * CSmartTimers.h
 *
 *  Created on: Apr 1, 2015
 *      Author: rock
 */

#ifndef SMARTTIMERS_H_
#define SMARTTIMERS_H_

#include <cstdint>
#include <memory>
#include <thread>
#include <set>
#include <atomic>
#include <mutex>
#include "../Common/Defines.h"

#define MAX_TIMERS (1024)

namespace NSSmartUtils
{

enum ETimerType
{
	ETT_REALTIME = 0, ETT_MONOTONIC = 1
};

enum EErrCode
{
	EEC_SUC = 0, EEC_ERR = -1
};

class CSmartTimers;

class ITimer
{
	friend CSmartTimers;

	DISABLE_COPY(ITimer)
	DISABLE_MOVE(ITimer)

protected:
	explicit ITimer(const ETimerType timer_type, int64_t interval_seconds, int64_t interval_nanos) :
			registerd_(false), fd_(-1), m_timer_type(timer_type), InitExpireSeconds_(interval_seconds), InitExpireNanos_(interval_nanos), IntervalSeconds_(
					interval_seconds), IntervalNanos_(interval_nanos)
	{
	}

	virtual ~ITimer();

	int32_t create();

	bool IsRegistered()
	{
		return registerd_;
	}
	void Registered()
	{
		registerd_ = true;
	}

	int32_t GetFD()
	{
		return fd_;
	}

	virtual void HandleTimerEvent(uint64_t ui64Times) = 0;

public:

	static inline uint32_t GetMaxTimers()
	{
		return MAX_TIMERS;
	}

	int64_t GetIntervalSeconds()
	{
		return IntervalSeconds_;
	}

	int64_t GetIntervalNanos()
	{
		return IntervalNanos_;
	}

private:
	bool registerd_;
	int32_t fd_;
	int32_t m_timer_type;
	int64_t InitExpireSeconds_;
	int64_t InitExpireNanos_;
	int64_t IntervalSeconds_;
	int64_t IntervalNanos_;
};
typedef std::shared_ptr<NSSmartUtils::ITimer> timer_ptr_t;

class CSmartTimers
{
	DISABLE_COPY(CSmartTimers)
	DISABLE_MOVE(CSmartTimers)

public:
	explicit CSmartTimers();
	virtual ~CSmartTimers();

public:

	int32_t start();
	int32_t stop();

	int32_t register_timer(timer_ptr_t &ptimer);
	uint32_t get_max_timers();

	void handle_timers();

private:
	volatile bool m_stop_flag;
	typedef std::set<timer_ptr_t> timers_set_t;
	timers_set_t m_timers;
	typedef std::shared_ptr<std::thread> thread_ptr_t;
	thread_ptr_t m_pthread;
	std::mutex m_state_lk, m_timers_lk;
	int32_t m_epollfd;
};

} /* namespace ns_utils */

#endif /* SMARTTIMERS_H_ */
